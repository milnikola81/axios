{"remainingRequest":"/home/academy/Desktop/NK/vue/vivify-academy-vue/node_modules/babel-loader/lib/index.js!/home/academy/Desktop/NK/vue/vivify-academy-vue/node_modules/vue-loader/lib/selector.js?type=script&index=0!/home/academy/Desktop/NK/vue/vivify-academy-vue/src/components/ContactDetails.vue","dependencies":[{"path":"/home/academy/Desktop/NK/vue/vivify-academy-vue/src/components/ContactDetails.vue","mtime":1534188973824},{"path":"/home/academy/Desktop/NK/vue/vivify-academy-vue/package.json","mtime":1534183591012},{"path":"/home/academy/Desktop/NK/vue/vivify-academy-vue/node_modules/cache-loader/dist/cjs.js","mtime":1534183279426},{"path":"/home/academy/Desktop/NK/vue/vivify-academy-vue/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/home/academy/Desktop/NK/vue/vivify-academy-vue/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { contacts } from '../services/Contacts';\nexport default {\n  props: ['contact'],\n  methods: {\n    onDelete: function onDelete() {\n      var _this = this;\n\n      //console.log(this.contact.id)\n      contacts.delete(this.contact.id).then(function (response) {\n        return _this.$emit('contactDeleted', _this.contact);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n};",{"version":3,"sources":["ContactDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA;AAEA;UAEA;;;AAEA;;AACA;AACA,mCACA;mDACA;;2BACA;;AACA,AACA;AARA;AAFA","file":"ContactDetails.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"card\">\n      <ul class=\"list-group list-group-flush\" v-if=\"contact\">\n        <li class=\"list-group-item\"><i class=\"fas fa-user fa-fw\"></i> {{ contact.first_name }} {{ contact.last_name }}</li>\n        <li class=\"list-group-item\"><i class=\"fas fa-envelope fa-fw\"></i> {{ contact.email }}</li>\n        <li class=\"list-group-item\"><i class=\"fas fa-phone fa-fw\"></i> {{ contact.number }}</li>\n        <li class=\"list-group-item\">\n          <button @click=\"onDelete()\">Delete contact</button>\n        </li>\n        <li class=\"list-group-item\">\n          <router-link :to=\"{name: 'add-contact', params: {id: contact.id}}\"><button>Edit contact</button></router-link>\n        </li>\n      </ul>\n      <div class=\"card-body\" v-else>\n        &larr; Please select a contact you want to see or click <router-link to=\"/add-contact\">here</router-link> to create a new contact.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { contacts } from '../services/Contacts'\n\nexport default {\n  props: ['contact'],\n  methods: {\n    onDelete() {\n      //console.log(this.contact.id)\n      contacts\n      .delete(this.contact.id)\n      .then(response => this.$emit('contactDeleted', this.contact))\n      .catch(err => console.log(err))\n    }\n  }\n}\n</script>\n"]}]}